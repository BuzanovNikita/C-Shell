Командный интерпретатор (Shell)
В этом задании необходимо расширить функционал, реализованный в предыдущем задании.

1. Программа теперь должна уметь выполнять несколько командных строк, одну за другой, пока пользователь не даст команду exit, которая означает выход из shell. Считывание командных строк (конвейеров) происходит в цикле. Каждая строка заканчивается символом '\n'. После того, как отработало выполнение одной командной строки, программа ожидает от пользователя ввода следующей.

Завершение shell происходит либо по закрытию стандартного потока ввода, либо ввода пользователем команды exit. В первом случае шелл ничего не выводит перед закрытием, во втором - пишет "Shell is closing, bye" и закрывается,

2. Необходимо добавить возможность перенаправления потоков. Теперь общий вид строки команд должен быть следующим

команда_1 [параметры] [перенаправление] | ... | команда_n [параметры] [перенаправление]

Должно корректно обрабатываться перенаправление:

потока ввода (<)
потока вывода(>)
потока вывода с добавлением в конец файла(>>)
потока ошибок(2>)
Параметром является либо последовательность текстовых непробельных символов, либо последовательность текстовых (в том числе и пробельных!) символов заключенных в одинарные или двойные кавычки, 
в этом случае все что находится внутри кавычек считается одним параметром. Под текстовым символом понимается любой печатный символ, кроме символов кавычек, символа '|' и символов '<', '>' 
На каждой ступени конвейера может одновременно использоваться перенаправление нескольких различных потоков, например, потока ввода и вывода, но использование на одной ступени конвейера 
перенаправление несколько раз одного и того же потока считается синтаксической ошибкой.

3. Реализовать собственные варианты следующих встроенных команд:

cd - смена текущего каталога
pwd - выдача текущего каталога в стандартный поток вывода
exit - выход из shell. Перед выходом выводится "Shell is closing, bye"
В случае если exit появляется на одной из ступеней конвейера, выполнение конвейера прерывается , выводится сообщение перед выходом и shell завершается.

4. Предусмотреть возможные ошибочные ситуации:

вызов несуществующей команды, в этом случае вывод: "Command %s not found", где %s имя несуществующей команды
ошибка в синтаксисе команды: неправильное использование символов конвейера и перенаправлений, например ls >| wc, использование после символа перенаправления более одного имени файла, 
нечетное количество кавычек и т.д. Во всех таких случаях вывод "Syntax error"
ошибка при открытии файла, в этом случае вывод "File %s not found", где %s имя файла, который не удается открыть.
ошибка при открытии директории, в этом случае вывод: "Directory %s not found", где %s имя директории, в которую не удается войти или которую не удается прочитать
Все выводы ошибочных ситуаций выводятся в поток ошибок.

Input format
команда_1 [параметры] [перенаправление] | ... | команда_n [параметры] [перенаправление]

команда_1 [параметры] [перенаправление] | ... | команда_n [параметры] [перенаправление]

...
команда_1 [параметры] [перенаправление] | ... | команда_n [параметры] [перенаправление]

Output format
Вывод, соответствующих команд shell в stdout, либо соответствующей ошибки в stderr
